services:
  go:
    build:
      dockerfile: ./Dockerfile
      context: .
    container_name: twitter-clone-api
    ports:
      - "8080:8080"
    volumes:
      - ./:/go/src
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    working_dir: /go/src
    stdin_open: true

  db:
    image: postgres
    container_name: twitter-clone-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  mailcatcher:
    image: schickling/mailcatcher
    container_name: mailcatcher
    ports:
      - "1080:1080"
    networks:
      - default
      - twitter-clone-go_default #snowboardアプリのネットワーク名
volumes:
  postgres:

networks:
  twitter-clone-go_default:
    external: true
